#!/usr/bin/env node
var program = require('commander');
var chalk = require('chalk');
var fs = require('fs');

var packageJson = require('../package.json');
var app = require('../index');

var inputFile;
var outputFile;

program
  .version(packageJson.version)
  .arguments('<input> [output]')
  .option('-r, --reverse', 'Reverse conversion direction')
  .option('-d, --debug', 'Output debug information')
  .action(function onAction(input, output) {
    inputFile = input;
    outputFile = output;
  });

program.on('--help', function() {
  console.log('  Examples:');
  console.log('');
  console.log('    $ musicjson2abc input.json output.abc');
  console.log('    $ musicjson2abc -r example.json example.abc');
  console.log('');
  console.log('  Hint:');
  console.log('');
  console.log('    The input file should be a valid musicJSON file');
  console.log('    The output file will become a valid abc file.')
  console.log('    This may overwrite existing files.');
  console.log('');
});

program.parse(process.argv);

if (typeof inputFile === 'undefined') {
  console.error(chalk.bold.red('ERROR: No input file specified.'));
  console.info(chalk.cyan('Run musicjson2abc -h for further information.'));
  process.exit(1);
}
if (typeof outputFile === 'undefined') {
  outputFile = setDefaultOutput(inputFile);
  console.info(chalk.grey('INFO: No output file specified. Defaults to', outputFile));
}

readInput(inputFile, outputFile);

/**
 * Sets default output file if none specified
 * @param {string} input - The path to the input file
 */
function setDefaultOutput(input) {
  var output;
  if (program.reverse) {
    output = input.replace(/\.[^/.]+$/, "") + ".json";
  } else {
    output = input.replace(/\.[^/.]+$/, "") + ".abc";
  }
  return output;
}

/**
 * Reads the JSON eoncoded data from the specified input file
 * @param {string} input - The path to the specified input file
 * @param {string} output - The path to the output file
 */
function readInput(input, output) {
  fs.readFile(input, 'utf8', function(err, data) {
    if (err) {
      console.error(chalk.bold.red('ERROR:', err));
      process.exit(1);
    }

    if (program.debug) {
      console.log('Input data:');
      console.log(data);
      console.log('');
    }

    writeOutput(output, convert(data));
  });
}

/**
 * Converts input to specified format
 * @param {string} data - The data that should be converted
 */
function convert(data) {
  if (program.reverse) {
    if (program.debug) {
      console.log('Converting abc to json.');
      console.log('');
    }
    var output = app.convert2JSON(data);
  } else {
    if (program.debug) {
      console.log('Converting json to abc.');
      console.log('');
    }
    var output = app.convert2Abc(data);
  }

  return output;
}

/**
 * Writes the abc notated string to the specified output file
 * @param {string} file - The path to the specified output file
 * @param {string} data - The data that should be written to the file
 */
function writeOutput(file, data) {
  fs.writeFile(file, data, function(err) {
    if(err) {
      console.error(chalk.bold.red('ERROR:', err));
      process.exit(1);
    }

    if (program.debug) {
      console.log('Output data:');
      console.log(data);
      console.log('');
    }

    console.info(chalk.green('Output written to', outputFile));
  });
}

// Run with: musicjson2abc example.json

// Run jsdoc with: jsdoc index.js -d doc -R README.md
