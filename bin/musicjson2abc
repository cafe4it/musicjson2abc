#!/usr/bin/env node
var program = require('commander');
var chalk = require('chalk');
var fs = require('fs');
var path = require('path');

var packageJson = require('../package.json');
var app = require('../index');

var inputFile;
var outputFile;

program
  .version(packageJson.version)
  .arguments('<input> [output]')
  .option('-r, --reverse', 'Reverse conversion direction')
  .option('-d, --debug', 'Output debug information')
  .action(function onAction(input, output) {
    inputFile = input;
    outputFile = output;
  });

program.on('--help', function() {
  console.log('  Examples:');
  console.log('');
  console.log('    $ musicjson2abc input.json output.abc');
  console.log('    $ musicjson2abc path/to/input/ path/to/output/');
  console.log('    $ musicjson2abc -r example.json example.abc');
  console.log('');
  console.log('  Hint:');
  console.log('');
  console.log('    The input and output path should be a valid json / abc file or an existing path.');
  console.log('    Both argumnets for input and output should be of same type (file or directory) not mixed.');
  console.log('');
});

program.parse(process.argv);

if (typeof inputFile === 'undefined') {
  console.error(chalk.bold.red('ERROR: No input file specified.'));
  console.info(chalk.cyan('Run musicjson2abc -h for further information.'));
  process.exit(1);
}

readInput(inputFile, outputFile);

/**
 * Sets default output file if none specified
 * @param {string} input - The path to the input file
 */
function getDefaultOutput(input) {
  var inputStats = fs.lstatSync(input);
  var ext;

  if (inputStats.isDirectory()) {
    return input;
  } else if (inputStats.isFile()) {
    if (program.reverse) {
      ext = ".json";
    } else {
      ext = ".abc";
    }
  } else {
    throw new Error('Unspecified input path.');
  }

  return input.replace(/\.[^/.]+$/, "") + ext;
}

function setOutputExtension(input) {
  var ext;
  if (program.reverse) {
    ext = ".json";
  } else {
    ext = ".abc";
  }
  return input.replace(/\.[^/.]+$/, "") + ext;
}

/**
 * Reads the JSON eoncoded data from the specified input file
 * @param {string} input - The path to the specified input file
 * @param {string} output - The path to the output file
 */
function readInput(input, output) {
  var inputStats = fs.lstatSync(input);
  if (typeof output === 'undefined') {
    output = getDefaultOutput(input);
  }
  var outputStats = fs.lstatSync(output);

  if (inputStats.isDirectory() && outputStats.isDirectory()) {

    var files = fs.readdirSync(input);
    for (var i = 0; i < files.length; i++) {
      if ((path.extname(files[i]) === '.json' && !program.reverse) || (path.extname(files[i]) === '.abc' && program.reverse)) {
        if (fs.lstatSync(files[i]).isFile()) {
          var iFile = path.join(input, files[i]);
          var oFile = path.join(output, setOutputExtension(files[i]));
          writeOutput(oFile, convert(readFile(iFile)));
        }
      }
    }

  } else if (inputStats.isFile() && outputStats.isFile()) {

    writeOutput(output, convert(readFile(input)));

  } else {

    throw new Error('Unspecified input or output path.');

  }
}

/**
 * Read file at specified path
 * @param {string} path - The file path that should be read
 * @returns {string}
 */
function readFile(path) {
  var ret = fs.readFileSync(path, 'utf8');
  if (program.debug) {
    console.log('Input data:');
    console.log(ret);
    console.log('');
  }
  return ret
}

/**
 * Converts input to specified format
 * @param {string} data - The data that should be converted
 */
function convert(data) {
  if (program.reverse) {
    if (program.debug) {
      console.log('Converting abc to json.');
      console.log('');
    }
    var output = app.convert2JSON(data);
  } else {
    if (program.debug) {
      console.log('Converting json to abc.');
      console.log('');
    }
    var output = app.convert2Abc(data);
  }

  return output;
}

/**
 * Writes the abc notated string to the specified output file
 * @param {string} path - The path to the specified output file
 * @param {string} data - The data that should be written to the file
 */
function writeOutput(path, data) {
  fs.writeFile(path, data, function(err) {
    if(err) {
      console.error(chalk.bold.red('ERROR:', err));
      process.exit(1);
    }

    if (program.debug) {
      console.log('Output data:');
      console.log(data);
      console.log('');
    }

    console.info(chalk.green('Output written to', path));
  });
}

// Run with: musicjson2abc example.json

// Run jsdoc with: jsdoc index.js -d doc -R README.md
